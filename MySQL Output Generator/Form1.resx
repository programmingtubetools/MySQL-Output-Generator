<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGCAAAAEAIACoDAAAFgAAACgAAAAYAAAAQAAAAAEAIAAAAAAAAAwAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADwuwAA8LsAA/G7ABvyvABG8rwAcvK8AJzyvAC68rwAyfK8AMvyvADJ8rwAwvK8
        ALnyvACi8rwAevG8AE3xuwAj8LsAB/K8AAAAAAAAAAAAAAAAAAAAAAAA8rwAAPC7AArxvABF8rwAlPK8
        ANDyvADw8rwA/fK8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA/vO8APPzvQDa9L0Ap/a/
        AFf6wwAU/9EAAO67AAD6vwAA8rsAM/K8AKvyvADy8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8bsA/+y4AP/zvQD/8rwA/+azAP/cqwD/3asA/9uqAPnhrwDD8rwASO24AAHyvAA98rwA1PK8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/0vQD/2KgA/2VPAP/InAD/9L4A/4hq
        AP86LQD/PS8A/zotAP+GaQD/870A5PG8AFfyvACu8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8rwA//K8AP/zvAD/6rYA/3NZAP9AMgD/y50A/92sAP/LnwD/zJ8A/8ueAP/bqgD/8rwA//K8
        AMfyvADD8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/870A/+y3
        AP9jTQD/QjQA/+KwAP/1vwD/9L4A//S+AP/zvQD/8rwA//K8ANTyvADC8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/9L0A/9WlAP9MOwD/c1kA/+q2AP/zvAD/8rwA//K8
        AP/yvAD/8rwA//K8ANTyvADC8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        AP/zvQD/4a8A/1JAAP9xWAD/6bUA//O9AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8ANTyvADC8rwA//K8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/zvQD/47AA/6WAAP/mswD/870A//K8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8ANTyvADC8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8rwA//K8AP/yvAD/87wA9/W+APLzvQD58rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        ANTyvADC8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvADU8rwAUfG8
        AFHyvADR8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8ANTyvADC8rwA//K8AP/yvAD78rwA0fK8
        ALXyvAC88rwA5vK8AP/yvAD/8rwA6/K8ALTyvAA68bsAGfK8AK3yvAD78rwA2vK8AMvyvADM8rwAzPK8
        AO7yvAD/8rwA//K8ANTyvADC8rwA//K8AP/yvADl8rwAMPC7ABPwuwAP8rwAOfK8ANPyvADX8rwAQ/K7
        AAfyvQAA8bsAGfK8AK3yvAD68rwAT/G9AAzxvQAS8b0AFPK8AK3yvAD/8rwA//K8ANTyvADC8rwA//K8
        AP/yvADs8rwAmvK8ALbxvAA+8rwAAPK8AIDyvABb/7QAAPG8AF3yvAB/8bsAD/G7ACnyvADX8rwARfK9
        AAjyvACM8rwAs/K8AOTyvAD/8rwA//K8ANTyvADC8rwA//K8AP/yvAD/8rwA0PK8AGHzvQAO8bsADfK8
        AI/yvAAo8r0AFvK8ANTyvAD48rwASPG7AALyvACu8rwARvK9AA/yvADL8rwA//K8AP/yvAD/8rwA//K8
        ANTyvADC8rwA//K8AP/yvADp8rwAOeKyAAHxuwA88rwAqvK8AODyvAAo8r0AFvK8ANPyvAD58rwASvC7
        AAPyvACt8rwARvK9AA7yvADK8rwA//K8AP/yvAD/8rwA//K8ANTyvADC8rwA//K8AP/yvADc8bwAHfG7
        ABHyvACc8rwAtfK8AN3yvABj/bEAAPK8AFryvAB+8bsAD/G8ACTyvADV8rwARPK9AA7yvADK8rwA//K8
        AP/yvAD/8rwA//K8ANnyvADC8rwA//K8AP/yvAD58rwAePG7ABPxuwAX8bwAH/K8AMXyvADc8bsATfG7
        AAzvvAAH8bwAJPK8AKTyvAD58rwAS/K8ABnyvADN8rwA//K8AP/yvAD/8rwA//K8AN3yvADC8rwA//K8
        AP/yvAD/8rwA9vK8AMvyvAC58rwAxPK8APPyvAD/8rwA8PK8AMHyvAC38rwA3PK8AP3yvAD+8rwAzfK8
        AL/yvADx8rwA//K8AP/yvAD/8rwA//K8ANzyvADC8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        ANzyvADC8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8ANzyvADC8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8rwA//K8ANzyvADC8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8ANzyvADC8rwA//K8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8ANzyvADC8rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        APryvADy8rwA6fK8AObyvADm8rwA6fK8APPyvAD68rwA//K8AP/yvAD/8rwA//K8AP/yvAD/8rwA//K8
        ANzyvADC8rwA//K8AP/yvAD/8rwA/fK8AODyvACp8rwAefG8AFLyvAA68rwAL/K8ACvyvAAr8rwALvK8
        ADrxvABS8rwAdvK8AKfyvADd8rwA/fK8AP/yvAD/8rwA//K8ANzyvADC8rwA//K8AP/yvADz8rwAhfK8
        ACXzvAAF7rwAAPa8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrvgAA+roAAPC8AAXyvAAk8rwAfvK8
        AO3yvAD/8rwA//K8AN3yvAC68rwA//K8AP/yvAC18bsACfG7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvAAA8LwABvK8AKnyvAD/8rwA//K8AM7yvABZ8rwA5/K8
        AP/yvADh8rwAVPG7AArywAAA8bsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7rwAAPK7
        AADxuwAI8bwAUPK8AN3yvAD/8rwA5fK8AFrvvwAD8rwAUPK8AM/yvAD98rwA9PK8ALryvAB28rwARfG8
        ACfyvAAY8bwAEe+9AA7vvQAO8LwAEPK8ABjxvAAl8bwAQ/G7AHDyvACz8rwA8vK8APzyvADJ8rwATPC+
        AAHzvAAA9LgAAPK8AB3yvABs8rwAu/K8AOvyvAD98rwA9vK8AOjyvADV8rwAyfK8AMTyvADE8rwAyPK8
        ANbyvADo8rwA9fK8APvyvADp8rwAtfK8AGfzvAAY/LwAAPS8AAAAAAAAAAAAAO67AADrugAA8bwADvK8
        ADfyvABr8rwAnPK8AMLyvADc8rwA6PK8AO7yvADt8rwA5/K8ANryvADB8rwAmfK8AGfyvAAz8r0AC/qy
        AADuwAAAAAAAAAAAAADwAA8AwAADAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAACAAAASAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/
        gAAH/+AAA//AAAAAAADAAAMA8AAPAA==
</value>
  </data>
</root>